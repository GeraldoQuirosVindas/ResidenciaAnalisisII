@model SistemaCompra.Models.Auth.User

@{
	ViewBag.Title = "CreateUsers";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateUser</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>User</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IdRole, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.IdRole, (IEnumerable<SelectListItem>)ViewBag.Roles, "-- Seleccionar --", new { @id = "dropRole", @class = "form-control" })

				@Html.ValidationMessageFor(model => model.IdRole, "", new { @class = "text-danger" })
			</div>
		</div>

		<div id="inputManager" class="form-group" style="display:none;">
			@Html.LabelFor(model => model.IdManager, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.IdManager, (IEnumerable<SelectListItem>)ViewBag.Manager, "-- Seleccionar --", new { @id = "dropManager", @class = "form-control" })

				@Html.ValidationMessageFor(model => model.IdManager, "", new { @class = "text-danger" })
			</div>
		</div>




		@*<div class="form-group">
				@Html.LabelFor(model => model.IdRole, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IdRole, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.IdRole, "", new { @class = "text-danger" })
				</div>
			</div>*@

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript" src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">

	$("#dropRole").bind("change", function () {
		console.log("cambio...")

		var selectedID = $("#dropRole").val();

		if (selectedID == 3) {
			document.getElementById('inputManager').style.display = 'block'; // show
		} else {
			document.getElementById('inputManager').style.display = 'none'; // hide

		}

	});

</script>



@section Scripts {



	@Scripts.Render("~/bundles/jqueryval")
}
